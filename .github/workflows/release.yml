name: release-with-tag

on:
  push:
    tags:
      - 'v*'

env:
  NAR_NAME: Haine
  FETCH_DEPTH: 30
  MAIN_BRANCH: main

jobs:
  release-with-tag:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ env.MAIN_BRANCH }}
        fetch-depth: ${{ env.FETCH_DEPTH }}

    - name: tag name
      run: |
        git pull --tags
        # から最新タグまでのコミットメッセージを取得してenv.BODYに格納
        LATEST_TAG=$(git tag --sort=-creatordate | head -n1 || echo "")
        SEMI_LATEST_TAG=$(git tag --sort=-creatordate | head -n2 | tail -n1 || echo "")
        echo "LATEST_TAG: $LATEST_TAG"
        echo "SEMI_LATEST_TAG: $SEMI_LATEST_TAG"
        if [ -n "$LATEST_TAG" ]; then
          git log "${SEMI_LATEST_TAG}..${LATEST_TAG}" --pretty=format:"%s" \
            | grep -v "update md5" \
            | grep -v "Merge pull request" \
            | grep -v "Merge branch" \
            | grep -v "Merge remote-tracking" \
            | sed -e 's/^/- /'
        else
          git log --pretty=format:"%s" \
            | grep -v "update md5" \
            | grep -v "Merge pull request" \
            | grep -v "Merge branch" \
            | grep -v "Merge remote-tracking" \
            | sed -e 's/^/- /' \
            | head -n ${{ env.FETCH_DEPTH }}
        fi
        {
          echo "BODY<<EOF"
          if [ -n "$LATEST_TAG" ]; then
            git log "${SEMI_LATEST_TAG}..${LATEST_TAG}" --pretty=format:"%s" \
              | grep -v "update md5" \
              | grep -v "Merge pull request" \
              | grep -v "Merge branch" \
              | grep -v "Merge remote-tracking" \
              | sed -e 's/^/- /'
            echo "EOF"
          else
            git log --pretty=format:"%s" \
              | grep -v "update md5" \
              | grep -v "Merge pull request" \
              | grep -v "Merge branch" \
              | grep -v "Merge remote-tracking" \
              | sed -e 's/^/- /' \
              | head -n 5
            echo "EOF"
          fi
        } >> $GITHUB_ENV

    - name: Zip output
      run: |
        zip -r ${{ env.NAR_NAME }}.nar * -x readme.md -x .git/\* -x .github/\* -x .git* -x ${{ env.NAR_NAME }}.nar -x ghost/master/rustfmt.toml -x ghost/master/.cargo\* -x ghost/master/Cargo\* -x ghost/master/src/\* -x ghost/master/ipadic\* -x md5buildignore.txt -x build\*

    - name: Upload Release Asset(with tag)
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ env.NAR_NAME }}.nar
        body: |
          ${{ env.BODY }}
