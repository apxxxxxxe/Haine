//******************************************************************************
// YAYA　ゴーストテンプレート
// メニュー処理辞書
//******************************************************************************

//******************************************************************************
//メインメニューの展開
//
//AYATEMPLATE.MenuItemの使い方
//1つめの文字列＝選択肢に表示する文字列
//2つめの文字列＝選んだときに実行される関数名
//3つめの文字列＝改行する量　50%刻み　省略すると100%（＝\n）
//******************************************************************************

On_balloon_tooltip {
  if ISFUNC( "BalloonTooltip_%(reference[1])" ) {
    EVAL( "BalloonTooltip_%(reference[1])" )
  }
}

// 「BalloonTooltip_[選択肢ID]」にツールチップで表示させるテキストを記述
BalloonTooltip_OnPomodoroSet { "（作業時間）-(休憩時間)-（大休憩時間）" }

//------------------------------------------------------------------------------
//メインメニュー展開
//------------------------------------------------------------------------------
OnOpenMenu
{
  _quickdialogue = ''
  if TalkStatus == 2
  {
    _quickdialogue = '\_q'
    '\C\c'
  }

  --
  //if PomodoroStatus > 0
  //{
  //  "\![timerraise,1000,0,OnReloadTimer,1]" // 10秒ごとに更新
  //}

  --
  if (メニュー台詞 == '')
  {
    メニュー台詞 = メニュー一言
  }

  if GETTYPE(_argv[0]) == 3 && _argv[0] != ""
  {
    メニュー台詞 = _argv[0]
  }

  TalkStatus = 2
  --
  "%(メインメニュー)%(_quickdialogue)%(メニュー台詞)"
}

OnReloadTimer
{
  if PomodoroStatus > 0
  {
    '\C\1\c\_q\f[align,center]'
    --
    if WillResetPomodoro == 1
    {
      WillResetPomodoro = 0
      ResetPomodoroTimer(currentpomodoro)
    }
    else
    {
      OnShowTimer
    }
  }
}

OnShowTimer
{
  _timerv = ''
  if (PomodoroStatus == 1) {
      _timerv = "\__q[OnPomodoroStop]%(ICON('stopwatch'))\f[height,12] %(PomodoroCount+1)セット目 %(TimerMin)/%(currentpomodoro)分\__q"
  } elseif (PomodoroStatus == 2) {
      _timerv = "\__q[OnTimerStop,%(LoopCount),%(_totalmin)]%(ICON('stopwatch'))\f[height,12] %(TimerMin)/%(CurrentLoop)分\__q"
  }
  if (PomodoroStatus > 0) {
    "\_l[0,13.3em]\0\f[align,right]\f[cursorstyle,none]\f[color,175,175,165]%(_timerv)\f[default]"
  } else {
    "\0\_l[@0.7em,]\__q[OnTimerMenuSelected]%(ICON('stopwatch'))\__q"
  }
}

メインメニュー
{
  "\![set,autoscroll,disable]\_q\*\0/
  //\_l[0,1.2em]------------------------------------/
  \_l[0,1.2em]/
  \_l[0.8em,@2.0em]\![*]\q[話して,Menu_AITALK]/
  \_l[0.8em,@1.3em]\![*]\q[さっきの話,Menu_LASTTALK]/
  \_l[0.8em,@1.3em]\![*]\q[Web拍手,OnWebClap]/
  \_l[0.7em,13.25em]\__q[OnMenuClose]%(ICON('cross'))\__q/
  \_l[@0.7em,]\__q[OnConfigMenu]%(ICON('cog'))\__q"
  --
  OnShowTimer
  --
  "\0\_l[0,0]\_q"
}

メニュー一言{
  if (GetSurfaceElements(5) == 6 || GetSurfaceElements(5) == 3) {
    "……h11" + GetSurfaceElements(3) + "10" + EVAL(GetSurfaceElements(5) - 2) + "\w4h11" + GetSurfaceElements(3) + "201あ、呼んだかしら？"
  } elseif (lastmouseevent == 'MouseDoubleClick0bust') {
    "h112207ヘンタイ！"
    "h112204楽しいの？"
  } else {
    if (systemuptime - lastresponce) >= (60 * uwanosora_minute) {
      // 最後のランダムトーク・触り反応から%(uwanosora_minute)分が経ったとき
      "……h114201ああ、h114204何かしら。"
    }
    "h111204はいφ、なにφ？"
    "h111201うんφ、どうしたのφ？"
    "h114201聞くわ。"
    "h114101どうしたのφ？"
  }
}

OnConfigMenu
{
  TalkStatus = 2
  '\C\c'
  --
  "%(設定メニュー)\e"
}

設定メニュー
{
  _talkintervalmin = aitalkinterval / 60
    _talkintervalmessage = "なし"
    if _talkintervalmin != 0 {
      _talkintervalmessage = "%(_talkintervalmin)分"
    }

  "\b[4]\_q/
    \_l[0.5em,2em]◆喋り頻度\_l[@0.5em,]【現在\_l[@0.3em,]%(_talkintervalmessage)】/
    \_l[2em,@1.5em]\q[1,OnTalkIntervalSet,60]\_l[@0.5em,]\q[3,OnTalkIntervalSet,180]\_l[@0.5em,]\q[5,OnTalkIntervalSet,300]\_l[@0.5em,]\q[10,OnTalkIntervalSet,600]\_l[@0.5em,]\q[なし,OnTalkIntervalSet,0]/
    \_l[0.5em,@2em]◆時報\_l[@0.5em,]【現在\_l[@0.3em,]%(IsJihouActive)】/
    \_l[2em,@1.5em]\q[有効,OnJihouSelected,1]\_l[@0.5em,]\q[無効,OnJihouSelected,0]/
    \_l[0.7em,13.25em]\__q[OnMenuClose]%(ICON('cross'))\__q\_l[@0.7em,]\__q[OnOpenMenu]%(ICON('arrow-left'))\__q/
    "
}

OnJihouSelected
{
  case reference[0]
  {
    when 0
    {
      IsJihouActive = '無効'
    }
    when 1
    {
      IsJihouActive = '有効'
    }
  }
  設定メニュー
}


ポーズ保持表情
{
}

OnTalkIntervalSet
{
  aitalkinterval = reference[0]
    /*
       _message = ""
       case aitalkinterval {
       when 600 {
       _message = "h111209少しφ、\_w[250]作業のほうに集中するわね"
       }
       when 300 {
       _message = "h111209ゆっくり話しましょう"
       }
       when 180 {
       _message = "h111204いつもどおり話すわ"
       }
       when 60 {
       _message = "h111201たくさんφ？\_w[500]　h111207がんばってみるわ"
       }
       when 0 {
       _message = "h111209静かにしているわ"
       }
       others {
       "\1デバッグ：喋り頻度に意図しない値が入力されました"
       }
       }
       */
    "\C\c"
    --
    OnConfigMenu
}

//------------------------------------------------------------------------------
//メニュー選択タイムアウト
//------------------------------------------------------------------------------
OnChoiceTimeout
{
}


//******************************************************************************
//各項目の処理内容
//******************************************************************************

OnMenuClose
{
  メニュー台詞 = ''
  TalkStatus = 0
  "\![timerraise,0,0,OnReloadTimer]" // 予約を削除
}
//アンカー　ツールチップ

OnTimerMenuSelected
{
  "\C\c/
    \_q\_l[0.5em,2em]◆ポモドーロタイマー/
    \_l[1.5em,@1.7em]\![*]\q[2-1,OnPomodoroSet,2,1]/
    \_l[1.5em,@1.7em]\![*]\q[10-2,OnPomodoroSet,10,2]/
    \_l[1.5em,@1.2em]\![*]\q[15-3,OnPomodoroSet,15,3]/
    \_l[1.5em,@1.2em]\![*]\q[25-5,OnPomodoroSet,20,4]/
    \_l[1.5em,@1.2em]\![*]\q[25-5,OnPomodoroSet,25,5]/
    /
    \_l[11.5em,2em]◆ループタイマー/
    \_l[12.5em,@1.7em]\![*]\q[1,OnLoopSet,1]/
    \_l[12.5em,@1.2em]\![*]\q[10,OnLoopSet,10]/
    \_l[12.5em,@1.2em]\![*]\q[15,OnLoopSet,15]/
    \_l[0.7em,13.25em]\__q[OnMenuClose]%(ICON('cross'))\__q\_l[@0.7em,]\__q[OnOpenMenu]%(ICON('arrow-left'))\__q/
    "
}


//---- 何か話して
Menu_AITALK
{
  TalkStatus = 1
  "h114201いいわよ。h114205……そうね、\n\c"
  "h113309なんの話がいいかしら……h113205……そうね、\n\c"
  --
  RandomTalk
  --
  '\![raise,OnRandomTalkExEnd]'
}

//---- さっきの話は
Menu_LASTTALK
{
  lastanchor = ""
    "h111209さっきの話ね\_q\n\n\_l[0,@%(balloon.lines+1)em]　\_l[0,@-%(balloon.lines+1)em]\_q"//\w6\n\_q-\w1---\w1------\w1--------------\w1-------\w1----\w1---\w1--\w1-\n\_w[500]\_l[0,@%(balloon.lines)em]　\_l[0,@-%(balloon.lines)em]\_q"
    --
    lasttalk
    //AYATEMPLATE.LastTalk
}

//---- 他のゴーストと話す
Menu_GHOSTCOMSTART
{
  StartCommunicate
}

//---- ヘッドライン
Menu_HEADLINECANCEL
{
  //---- キャンセルされた
}

