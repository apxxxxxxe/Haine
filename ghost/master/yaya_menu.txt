//******************************************************************************
// YAYA　ゴーストテンプレート
// メニュー処理辞書
//******************************************************************************

//------------------------------------------------------------------------------
//OnMainMenu展開
//------------------------------------------------------------------------------
OnOpenMenu
{
  TalkStatus = 'menu'
  if (_argv[0] != "") {
    CurrentMenuDialog = _argv[0]
  } else {
    CurrentMenuDialog = MenuDialog
  }
  OnMainMenu + CurrentMenuDialog
}

OnMainMenu
{
  SetBalloonSurface
  --
  "\![set,autoscroll,disable]\_q\*\0/
  //\_l[0,1.2em]------------------------------------/
  \_l[0,1.2em]/
  \_l[0.8em,@2.0em]\![*]\q[話して,Menu_RandomTalk]/
  \_l[0.8em,@1.3em]\![*]\q[さっきの話,Menu_LastTalk]/
  \_l[0.8em,@1.3em]\![*]\q[Web拍手,OnWebClap]/
  \_l[0.7em," + PosOffset + "]\__q[OnMenuClose]%(ICON('cross'))\__q/
  \_l[@0.7em,]\__q[OnConfigMenu]%(ICON('cog'))\__q"
  --
  if ISFUNC("OnShowTimer") {OnShowTimer}
  --
  if ISFUNC("OnShowTalkSetting") {OnShowTalkSetting}
  --
  if ISFUNC("OnShowInfo") {OnShowInfo}
  --
  "\0\_l[0,0]\_q"
}

DialogNotice {
  "あφ、呼んだかしら？"
  "ああφ、何かしら。"
}

MenuDialog {
  _eyes = GetSurfaceElements(6)
  if _eyes == 6 || _eyes == 5 {
    "……h11" + GetSurfaceElements(3) + "10" + EVAL(GetSurfaceElements(6) - 3) + "\w4h11" + GetSurfaceElements(3) + "201" + DialogNotice
  } else {
    "h111204はいφ、なにφ？"
    "h111201うんφ、どうしたのφ？"
    "h111201聞くわ。"
    "h111101どうしたのφ？"
  }
}

OnConfigMenu
{
  TalkStatus = 'menu'
  '\C\c'
  --
  "%(全般設定メニュー)\e"
}

全般設定メニュー
{
  SetBalloonSurface('library')
  --
  "\_q/
  \_l[0.5em,1.8em]◆時報\_l[@0.5em,]【現在\_l[@0.3em,]%(IsJihouActive)】/
  \_l[2em,@1.5em]\q[有効,OnJihouSelected,有効]\_l[@0.5em,]\q[無効,OnJihouSelected,無効]/
  \_l[0.5em,@2em]◆ユーザ生活リズム\_l[@0.5em,]【現在\_l[@0.3em,]%(circadian_rhythm)】/
  \_l[2em,@1.5em]\q[昼型,OnCircadianRhythmSelected,昼型]\_l[@0.5em,]\q[夜型,OnCircadianRhythmSelected,夜型]\_l[@0.5em,]\q[設定しない,OnCircadianRhythmSelected,設定しない]/
  \_l[0.5em,@2em]◆１行あたりの文字数\_l[@0.5em,]\q[【現在 " + ShowCurrentBalloonCols + "】,OnBalloonColsConfig]/
  \_l[0.7em," + PosOffset + "]\__q[OnMenuClose]%(ICON('cross'))\__q\_l[@0.7em,]\__q[OnOpenMenu]%(ICON('arrow-left'))\__q/
  "
  --
  if ISFUNC("OnShowTalkSetting") {OnShowTalkSetting}
  --
  if ISFUNC("OnShowInfo") {OnShowInfo}
}

ShowCurrentBalloonCols {
  if ISVAR("forced_balloon_cols") {
    forced_balloon_cols
  } else {
    balloon_cols
  }
}

OnBalloonColsConfig {
  SetBalloonSurface('library')
  --
  '\![open,sliderinput,バルーン設定,60000,' + ShowCurrentBalloonCols + ',0,48]/
  \_qバルーンの１行あたりの文字数を設定できます。\nこの値をもとに一部トークが見やすく改行されます\n(参考："sspデフォルト+"は24文字、\n"霧の郊外にて"は26文字程度を推奨)'
}

バルーン設定を入力した {
  forced_balloon_cols = InputMessage
  "\C\c\![raise,OnConfigMenu]"
}

OnJihouSelected
{
  IsJihouActive = reference[0]
  全般設定メニュー
}

OnCircadianRhythmSelected
{
  circadian_rhythm = reference[0]
  全般設定メニュー
}

OnTalkIntervalSet
{
  aitalkinterval = reference[0]
  "\C\c"
  --
  OnTalkSettingMenu
}

OnShowInfo
{
  "\_l[@0.7em,]\__q[OnInfo]%(ICON('info'))\__q"
}

OnInfo {
  TalkStatus = 'menu'
  '\C\c'
  --
  SetBalloonSurface
  --
  "\_q/
  \_l[0.5em,1.8em] 友好度：" + UpdateKoukando + "（" + UserKoukando + "）/
  \_l[0.5em,@1.5em] 累計触り回数（頭）：" + good_touch_count + "回/
  \_l[0.5em,@1.5em] 累計触り回数（胸）：" + bad_touch_count + "回/
  \_l[0.7em," + PosOffset + "]\__q[OnMenuClose]%(ICON('cross'))\__q\_l[@0.7em,]\__q[OnConfigMenu]%(ICON('cog'))\__q"
  --
  if ISFUNC("OnShowTalkSetting") {OnShowTalkSetting}
  --
  "\__q\_l[@0.7em,]\__q[OnOpenMenu]%(ICON('arrow-left'))\__q"
}

OnShowTalkSetting
{
  "\_l[@0.7em,]\__q[OnTalkSettingMenu]%(ICON('bubble'))\__q"
}

OnTalkSettingMenu
{
  TalkStatus = 'menu'
  '\C\c'
  --
  "%(喋り設定メニュー)\e"
}

喋り設定メニュー
{
  _talkintervalmin = aitalkinterval / 60
  _talkintervalmessage = "なし"
  if _talkintervalmin != 0 {
    _talkintervalmessage = "%(_talkintervalmin)分"
  }

  SetBalloonSurface('garden')
  --
  "\_q/
  \_l[0.5em,1.8em]◆喋り頻度\_l[@0.5em,]【現在\_l[@0.3em,]%(_talkintervalmessage)】/
  \_l[2em,@1.5em]\q[1,OnTalkIntervalSet,60]\_l[@0.5em,]\q[3,OnTalkIntervalSet,180]\_l[@0.5em,]\q[5,OnTalkIntervalSet,300]\_l[@0.5em,]\q[10,OnTalkIntervalSet,600]\_l[@0.5em,]\q[なし,OnTalkIntervalSet,0]/
  \_l[0.5em,@2em]◆トーク話題\_l[@0.5em,]/
  \_l[2em,@1.5em]\![*]%(IsUnderLine(TalkTopicLife))\q[日常,OnTalkTopic,TalkTopicLife]\f[default]\_l[6em,]\![*]%(IsUnderLine(TalkTopicPlants))\q[植物,OnTalkTopic,TalkTopicPlants]\f[default] /
  \_l[2em,@1.5em]\![*]%(IsUnderLine(TalkTopicAroma))\q[アロマ,OnTalkTopic,TalkTopicAroma]\f[default]\_l[6em,]\![*]%(IsUnderLine(TalkTopicHorrow))\q[暗いフォークロア,OnTalkTopic,TalkTopicHorrow]\f[default] /
  \_l[0.7em," + PosOffset + "]\__q[OnMenuClose]%(ICON('cross'))\__q\_l[@0.7em,]\__q[OnConfigMenu]%(ICON('cog'))\__q\_l[@0.7em,]"
  --
  if ISFUNC("OnShowTimer") {OnShowTimer}
  --
  "\__q[OnOpenMenu]%(ICON('arrow-left'))\__q"
  --
  if ISFUNC("OnShowInfo") {OnShowInfo}
}

//------------------------------------------------------------------------------
//メニュー選択タイムアウト
//------------------------------------------------------------------------------
OnChoiceTimeout
{
}

//******************************************************************************
//各項目の処理内容
//******************************************************************************

OnMenuClose
{
  CurrentMenuDialog = ''
  TalkStatus = 'none'
  touch_count = 0
  if ISFUNC("OnReloadTimer") {"\![timerraise,0,0,OnReloadTimer]"} // 予約を削除
}
//アンカー　ツールチップ

//---- 何か話して
Menu_RandomTalk
{
  TalkStatus = 'talking'

  SetBalloonSurface
  --
  "h111201いいわよ。h111205……そうね、\c"
  "h113309なんの話がいいかしら…………h113205そうね、\c"
  --
  RandomTalk
  --
  '\![raise,OnRandomTalkExEnd]'
}

//---- さっきの話は
Menu_LastTalk
{
  lastanchor = ""

  SetBalloonSurface
  --
  "h111209さっきの話ね。\c"
  --
  lasttalk
}
