//******************************************************************************
// YAYA　ゴーストテンプレート
// マウス入力関連辞書
//******************************************************************************

//******************************************************************************
//マウス処理部
//
//以下、実際のトークを記述します。関数名は以下の規則になっています。
//[種別] + [スコープ] + [部位]
//種別は、MouseMove, MouseDoubleClick, MouseWheelUp, MouseWheelDown のどれかです。
//スコープは、\0,\1,といったスコープ番号です。
//部位は、当たり判定のどの部位かを表します。当たり判定の無い場所でのイベントの場合
//部位はありません。
//******************************************************************************

//******************************************************************************
//セリフ
//******************************************************************************

DialogSurprised
{
  '！……'
  'なっ……'
}

// セクハラ反応-起動直後
DialogTouchSexialFirst : nonoverlap
{
  firstsexialtouch = 1
  'h1111205……会って早々、これ？\nなんというか、h1111204流石ね。'
}

// セクハラ反応-怒り
DialogTouchSexialScold : nonoverlap
{
  'h1111202……いくら他人の目がないとはいえ、h1111204品性を疑うわ。'
  'h1111205これがあなたのやりたいこと？h1111204くだらないのね。'
  'h1111205スキンシップにしてはセンスが無いと思うわ。'
  'h1111209情熱的という人もいるでしょうし、\n野蛮で下劣という人もいるでしょうね。\n\nh1111204私は後者よ。'
}

// セクハラ反応-呆れ
DialogTouchSexialAkire : nonoverlap
{
  'h1111201さっきからずいぶん必死ね。\nh1111304ばかみたいな顔してるわよ。'
  'h1111304面白い顔。h1111309鏡で見せてあげたいわ。'
  'h1111104悪戯がすぎるわよ。'
  'h1111103はあ……h1111106何が楽しいんだか。'
  'h1111204その熱意は買うけれど。……h1111209虚しくないの？'
  'h1121207くすくす……h1121204ずいぶん必死ね。そんなに私の身体が欲しいの？'
}

DialogTouchDisturbedSexial : nonoverlap
{
  'h1111104……話していたのだけど？'
  'h1111304……話を聞くよりも、\n私の体を触っているほうがいいって？'
}

// セクハラ反応-現状使いどころがない
DialogTouchSexialNoUse : nonoverlap
{
  'h1111209爛れた欲は腐敗の兆候よ。\nh1111205甘美な果実は偶に味わうからいいのではないかしら？'
}

//******************************************************************************
//撫で反応
//******************************************************************************

MouseMove0head : nonoverlap
{
  good_touch_count++
  'h1111105……あたたかいのね、あなたの手。' + UpdateUserEmotions('喜び', 1)
  'h1111205……軽んじられているような気もするわ。h1111209まあ、いいけれど。' + UpdateUserEmotions('喜び', 1)
}

MouseMove0face : nonoverlap
{
  'h1121207くすぐったい。' + UpdateUserEmotions('喜び', 1)
}

MouseMove0bust : nonoverlap
{
  // 怒られるまでの回数
  _threshold = 12

  bad_touch_count++
  if ghostuptime < 60 && firstsexialtouch == 0 {
    UpdateUserEmotions('喜び', 1)
    --
    DialogTouchSexialFirst
  }
  elseif touch_count < _threshold / 3 {
    UpdateUserEmotions('喜び', 1)
    --
    'h1111205胸、か。h1111204ずいぶん嬉しそうだけれど、そんなにいいものなのかしら？'
    'h1111205……あなたは、私をそういう対象として見ているの？'
    'h1111205……そういう気分じゃないのだけれど。'
    'h1111205気安いのね。あまり好きではないわ。'
  }
  elseif touch_count < _threshold / 3 * 2 {
    UpdateUserEmotions('喜び', 1)
    --
    DialogTouchSexialScold
  }
  elseif touch_count < _threshold {
    DialogTouchSexialAkire
    --
    UpdateUserEmotions('喜び', -1)
  }
  elseif touch_count == _threshold {
    'h1111205\1触れようとした手先が、霧に溶けた。\n慌てて引っ込めると、手は元通りになった。'
    --
    'h1111201許されていると思ったの？\n'
    --
    'h1111304残念だけど、それほど気は長くないの。'
    'h1111204わきまえなさい。'
    --
    UpdateUserEmotions('不安', 1)
  }
  else {
    'h1111204\1自重しよう……。' + UpdateUserEmotions('悲しみ', 1)
  }
  firstsexialtouch = 1
}

//******************************************************************************
//つつかれ反応
//******************************************************************************

MouseDoubleClick0
{
  OnOpenMenu
}

//******************************************************************************
// めくり反応（上ホイール）
//******************************************************************************
MouseWheelUp0skirt : nonoverlap
{
  // 呆れ/怒られるまでの回数
  _threshold = 8

  if ghostuptime < 60 && firstskirttouch == 0 {
    UpdateUserEmotions('喜び', 1)
    --
    '@h2244402……！\nh1241102\_w[500]'
    --
    DialogTouchSexialFirst
  }
  elseif IsTalking {
    '@h2144402……\n'
    --
    DialogTouchDisturbedSexial
    --
    UpdateUserEmotions('喜び', -1, '悲哀', 1)
  }
  elseif touch_count <= _threshold / 2 {
    // 赤面
    '@h2244402……！\nh1241102\_w[500]'
    --
    UpdateUserEmotions('喜び', 1)
    --
    'h1111204……いいもの見たって顔してる。h1111209屈辱だわ。'
    'h1111205……ああ、ひどい人。h1111209泣いてしまいそうだわ。'
  }
  elseif touch_count <= _threshold {
    // 赤面
    UpdateUserEmotions('喜び', 1)
    --
    '@h2244402……！\nh1241102\_w[500]'
    --
    DialogTouchSexialScold
  }
  else {
    // 真顔
    '@h2114104……\n'
    --
    DialogTouchSexialAkire
    --
    UpdateUserEmotions('喜び', -1)
  }
  firstsexialtouch = 1
}

//******************************************************************************
// 引き寄せ反応（下ホイール）
//******************************************************************************

MouseWheelDown0shoulder
{
  if touch_count == 1 {
  }
  elseif touch_count == 2 {
  }
  elseif touch_count > 2 {
  }
}

MouseWheelDown0hand
{
  if touch_count == 1 {
  }
  elseif touch_count == 2 {
  }
  elseif touch_count > 2 {
  }
}

//******************************************************************************
//マウス処理部コア
//AYATEMPLATE.MouseMoveWheelFuncの2番目の数字が「感度」です。
//1番目の数字（0か1）は、MoveかWheelかを判別するためのもので、
//変更の必要はありません。
//******************************************************************************
// 共通処理
OnMouseEvent
{
  SetBalloonSurfaceSakura
  --
  ShowUserEmotions + InsertLineFeed(NextTouchTalk)
}

OnMouseMove
{
  if IsKeyBlocked {
    return
  }

  _result = AYATEMPLATE.MouseMoveWheelFunc(0, 50, 'MouseMove')
  if _result != '' && IsTalking {
    _result = DialogTouchDisturbedSexial + UpdateUserEmotions('喜び', -1, '悲哀', 1)
  }
  _result
}

OnMouseDoubleClick
{
  if IsKeyBlocked {
    return
  }

  NextTouchTalk = AYATEMPLATE.MouseEventExec('MouseDoubleClick')
  if NextTouchTalk != '' {
    '\![raise,OnMouseEvent]'
  }
}

OnMouseClickEx
{
  if IsKeyBlocked {
    return
  }

  if reference[5] == 'middle' {
    NextTouchTalk = AYATEMPLATE.MouseEventExec('MouseWheelClick')
    if NextTouchTalk != '' {
      '\![raise,OnMouseEvent]'
    }
  }
}

OnMouseWheel
{
  if IsKeyBlocked {
    return
  }

  _result = ''
  if TOINT(reference[2]) > 0 {
    _result = AYATEMPLATE.MouseMoveWheelFunc(1, 4, 'MouseWheelUp')
  }
  else {
    _result = AYATEMPLATE.MouseMoveWheelFunc(1, 4, 'MouseWheelDown')
  }

  if _result == '' {
    _result = AYATEMPLATE.MouseMoveWheelFunc(1, 4, 'MouseWheel')
  }

  _result
}

IsMouseTalkExist
{
  // _argv[0]: OnMouseClickなど
  // _argv[1]: reference[3]
  // _argv[2]: reference[4]
  _fname1 = _argv[0] + TOSTR(_argv[1]) + TOSTR(_argv[2])
  _fname2 = _argv[0] + TOSTR(_argv[1])

  if ISFUNC(_fname1) || ISFUNC(_fname2) {
    1
  }
  else {
    0
  }
}

//******************************************************************************
//マウスイベントコア
//******************************************************************************

TouchCount
{
  // 前回から30秒以上経過していたらカウントをリセット
  if systemuptime - lasttouch > 30 {
    touch_count = 0
    last_touch_part = ''
  }
  lasttouch = systemuptime
  lastresponce = systemuptime

  // _argv[0]: 触り反応の部位
  if last_touch_part == _argv[0] {
    touch_count += 1
  }
  else {
    touch_count = 1
  }
  last_touch_part = _argv[0]
}

AYATEMPLATE.MouseEventExec
{
  _fname = _argv[0] + TOSTR(reference[3]) + TOSTR(reference[4])
  if ISFUNC(_fname) {
    TouchCount(reference[4]) // 追加
    EVAL(_fname)
    return
  }

  _fname = _argv[0] + TOSTR(reference[3])
  if ISFUNC(_fname) {
    TouchCount(reference[4]) // 追加
    EVAL(_fname)
    return
  }
}

AYATEMPLATE.MouseMoveWheelFunc
{
  _interval = 1000

  // 前回ホイールトークから_interval[ms]経っていない&喋ってない場合はなにもしない
  if GETTICKCOUNT < wheel_inputtable_tick {
    return
  }

  _side = TOINT(reference[3])
  if _argv[0] {
    _side += 10
  }

  if AYATEMPLATE.strokeid[_side] == reference[4] {
    // 前回ころころから1500msたっていたらカウンタをリセット
    if (GETTICKCOUNT - TOINT(AYATEMPLATE.stroketimer[_side])) > 1500 {
      AYATEMPLATE.stroke[_side] = 1
    }
    AYATEMPLATE.stroketimer[_side] = GETTICKCOUNT

    _stroke = TOINT(AYATEMPLATE.stroke[_side])
    _stroke += 1
    AYATEMPLATE.stroke[_side] = _stroke
    if _stroke >= _argv[1] {
      AYATEMPLATE.stroke[_side] = 1
      NextTouchTalk = AYATEMPLATE.MouseEventExec(_argv[2])
      if NextTouchTalk != '' {
        wheel_inputtable_tick = GETTICKCOUNT + _interval
        '\![raise,OnMouseEvent]'
      }
    }
  }
  else {
    AYATEMPLATE.stroke[_side] = 1
    AYATEMPLATE.stroketimer[_side] = GETTICKCOUNT
    AYATEMPLATE.strokeid[_side] = reference[4]
  }
}
